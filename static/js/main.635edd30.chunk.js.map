{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","contaier","Grid","container","spacing","justify","item","component","Card","xs","md","cx","card","infacted","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","toLocaleDateString","borderColor","fill","CountryPicker","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","setState","this","image","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,UAAY,2B,oBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCAhCD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,gOCoDpJC,EA9CD,SAAC,GAA4D,IAAD,IAAzDC,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WAEnD,OAAKH,EAID,qBAAKI,UAAWC,IAAOC,SAAvB,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAApC,UACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGX,UAAWY,IAAGX,IAAOY,KAAKZ,IAAOa,UAA5E,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,sBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAKzB,EAAU0B,MAAOC,SAAU,IAAKC,UAAU,QAEtE,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SAAmC,IAAIQ,KAAK1B,GAAY2B,iBACxD,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,yDAGR,cAAChB,EAAA,EAAD,CAAMI,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGX,UAAWY,IAAGX,IAAOY,KAAKZ,IAAOJ,WAA5E,SACI,eAACkB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,uBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,IAAKC,UAAU,QAEtE,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SAAmC,IAAIQ,KAAK1B,GAAY2B,iBACxD,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,wDAIR,cAAChB,EAAA,EAAD,CAAMI,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGX,UAAWY,IAAGX,IAAOY,KAAKZ,IAAOH,QAA5E,SACI,eAACiB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,oBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAOwB,MAAOC,SAAU,IAAKC,UAAU,QAEnE,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SAAmC,IAAIQ,KAAK1B,GAAY2B,iBACxD,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,0DAjCT,c,yBCRTQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACnBC,EAAgBJ,EAChBE,IACFE,EAAa,UAAMJ,EAAN,sBAAuBE,IAHf,kBAOgDG,IAAMC,IAAIF,GAP1D,2BAObpC,KAAQC,EAPK,EAOLA,UAAWC,EAPN,EAOMA,UAAWC,EAPjB,EAOiBA,OAAQC,EAPzB,EAOyBA,WAPzB,kBASd,CAAEH,YAAWC,YAAWC,SAAQC,eATlB,kCAWrBmC,QAAQC,IAAR,MAXqB,0DAAH,sDAeTC,EAAc,uCAAG,8BAAAN,EAAA,+EAEHE,IAAMC,IAAN,UAAaN,EAAb,WAFG,uBAElBhC,EAFkB,EAElBA,KAFkB,kBAInBA,EAAK0C,KAAI,gBAAGzC,EAAH,EAAGA,UAAWE,EAAd,EAAcA,OAAoBwC,EAAlC,EAAsBC,WAAtB,MAA8C,CAAE3C,UAAWA,EAAU4C,MAAO1C,OAAQA,EAAO0C,MAAOF,YAJxF,gCAM1BJ,QAAQC,IAAR,MAN0B,yDAAH,qDAWdM,EAAc,uCAAG,8BAAAX,EAAA,+EAEYE,IAAMC,IAAN,UAAaN,EAAb,eAFZ,uBAEVe,EAFU,EAElB/C,KAAQ+C,UAFU,kBAInBA,EAAUL,KAAI,SAACR,GAAD,OAAaA,EAAQc,SAJhB,gCAM1BT,QAAQC,IAAR,MAN0B,yDAAH,qD,0BCwCZS,EAhED,SAAC,GAAyD,IAAD,IAAtDjD,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAU+B,EAAc,EAAdA,QACrD,EAAkCgB,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,YACQ,uCAAG,4BAAAlB,EAAA,sEACcM,IADd,OACXa,EADW,OAGjBF,EAAaE,GAHI,2CAAH,qDAMhBC,KACC,IAEH,IAAMC,EACJvD,EACE,cAAC,IAAD,CACED,KAAM,CACJyD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,uBAAwB,uBAAwB,wBAClE5D,KAAM,CAACC,EAAU0B,MAAOzB,EAAUyB,MAAOxB,EAAOwB,UAItDkC,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsB/B,OAGpD,KAGAgC,EACJf,EAAU,GACR,cAAC,IAAD,CACEnD,KAAM,CACJyD,OAAQN,EAAUT,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAAc,IAAIb,KAAKa,GAAMwB,wBACnDT,SAAU,CAAC,CACT1D,KAAMmD,EAAUT,KAAI,SAAC1C,GAAD,OAAUA,EAAKC,aACnC0D,MAAO,WACPS,YAAa,UACbC,MAAM,GACL,CACDrE,KAAMmD,EAAUT,KAAI,SAAC1C,GAAD,OAAUA,EAAKG,UACnCwD,MAAO,SACPS,YAAa,MACbR,gBAAiB,uBACjBS,MAAM,OAKV,KAGN,OACE,qBAAKhE,UAAWC,IAAOG,UAAvB,SACGyB,EAAUsB,EAAWU,K,oCCrCfI,EArBQ,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACtB,EAAkCrB,mBAAS,IAA3C,mBAAOH,EAAP,KAAkByB,EAAlB,KAUA,OARAnB,qBAAU,YACM,uCAAG,sBAAAlB,EAAA,kEACfqC,EADe,SACI1B,IADJ,6EAAH,qDAId2B,KACC,IAGD,cAACC,EAAA,EAAD,CAAarE,UAAWC,IAAOqE,YAA/B,SACE,eAACC,EAAA,EAAD,CAAcC,aAAa,IAAIC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOrD,QAA7E,UACE,wBAAQA,MAAM,GAAd,mBACCoB,EAAUL,KAAI,SAACR,EAAS+C,GAAV,OAAgB,wBAAgBtD,MAAOO,EAAvB,SAAiCA,GAApB+C,Y,iBCiBvCC,E,4MA7BXC,MAAQ,CACJnF,KAAM,GACNkC,QAAQ,I,EAOVqC,oB,uCAAsB,WAAOrC,GAAP,eAAAC,EAAA,sEACDF,EAAUC,GADT,OACdlC,EADc,OAGpB,EAAKoF,SAAS,CAAEpF,OAAMkC,QAASA,IAHX,2C,oJALxB,4BAAAC,EAAA,sEACuBF,IADvB,OACUjC,EADV,OAGIqF,KAAKD,SAAS,CAAEpF,SAHpB,gD,0EAUA,WAEI,MAA0BqF,KAAKF,MAAvBnF,EAAR,EAAQA,KAAOkC,EAAf,EAAeA,QACf,OACI,sBAAK7B,UAAWC,IAAOG,UAAvB,UACI,qBAAKJ,UAAWC,IAAOgF,MAAOC,IAAI,qCAAqCC,IAAI,aAC3E,cAAC,EAAD,CAAOxF,KAAMA,IACb,cAAC,EAAD,CAAeuE,oBAAqBc,KAAKd,sBACzC,cAAC,EAAD,CAAOvE,KAAMA,EAAMkC,QAASA,W,GAvB1BuD,IAAMC,WCLxBC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,U,mBCHhDjG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,sB","file":"static/js/main.635edd30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2n0yO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__Q6uui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1gMU5\",\"card\":\"Cards_card__2t2LJ\",\"infacted\":\"Cards_infacted__2Wl2d\",\"recovered\":\"Cards_recovered__1Kyny\",\"deaths\":\"Cards_deaths__kjhtx\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    // console.log(props);\r\n    if (!confirmed) {\r\n        return 'Loading...'\r\n    } \r\n    return (\r\n        <div className={styles.contaier}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infacted)}>\r\n                    <CardContent >\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infacted</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\"> Num    ber of active case of covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\"> Number of Recovered case of covid-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\"> Number of Deaths case of covid-19</Typography>\r\n                    </CardContent>\r\n                   \r\n\r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);  \r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    console.log(error);  \r\n\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);  \r\n\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n  \r\n    useEffect(() => {\r\n      const fetchMyAPI = async () => {\r\n        const initialDailyData = await fetchDailyData();\r\n  \r\n        setDailyData(initialDailyData);\r\n      };\r\n  \r\n      fetchMyAPI();\r\n    }, []);\r\n  \r\n    const barChart = (\r\n      confirmed ? (\r\n        <Bar\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [\r\n              {\r\n                label: 'People',\r\n                backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                data: [confirmed.value, recovered.value, deaths.value],\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: { display: true, text: `Current state in ${country}` },\r\n          }}\r\n        />\r\n      ) : null\r\n    );\r\n  \r\n    const lineChart = (\r\n      dailyData[0] ? (\r\n        <Line\r\n          data={{\r\n            labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n            datasets: [{\r\n              data: dailyData.map((data) => data.confirmed),\r\n              label: 'Infected',\r\n              borderColor: '#3333ff',\r\n              fill: true,\r\n            }, {\r\n              data: dailyData.map((data) => data.deaths),\r\n              label: 'Deaths',\r\n              borderColor: 'red',\r\n              backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n              fill: true,\r\n            },\r\n            ],\r\n          }}\r\n        />\r\n      ) : null\r\n    );\r\n  \r\n    return (\r\n      <div className={styles.container}>\r\n        {country ? barChart : lineChart}\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Chart;\r\n","import React,{useEffect,useState} from 'react';\r\n//import {NativeSelect,}FormControl\r\nimport { FormControl, NativeSelect } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\nconst CountryPicker =  ({ handleCountryChange }) => {\r\n    const [countries, setCountries] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchAPI = async () => {\r\n        setCountries(await fetchCountries());\r\n      };\r\n  \r\n      fetchAPI();\r\n    }, []);\r\n  \r\n    return (\r\n      <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\" \" onChange={(e) => handleCountryChange(e.target.value)}>\r\n          <option value=\"\">Gobal</option>\r\n          {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    );\r\n  };\r\n\r\nexport default CountryPicker;\r\n// import React from 'react'\r\n\r\n// const CountryPicker = () => {\r\n//   return (\r\n//     <div>\r\n//       <h2>Country</h2>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default CountryPicker\r\n","//import { render } from '@testing-library/react'\r\nimport React from 'react'\r\nimport Cards from './components/Cards/Cards'\r\nimport Chart from './components/Chart/Chart'\r\nimport CounteyPicker from './components/CountryPicker/CountryPicker'\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country:'',\r\n    }\r\n    async componentDidMount() {\r\n        const data = await fetchData();\r\n\r\n        this.setState({ data });\r\n      }\r\n      handleCountryChange = async (country) => {\r\n        const data = await fetchData(country);\r\n    \r\n        this.setState({ data, country: country });\r\n      }\r\n    render() {\r\n\r\n        const { data , country} = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src=\"https://i.ibb.co/7QpKsCX/image.png\" alt=\"COVID-19\" />\r\n                <Cards data={data} />\r\n                <CounteyPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}  />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js'\r\n\r\nReactDOM.render(<App />,document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1vKHu\",\"image\":\"App_image__1yuRt\"};"],"sourceRoot":""}